<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <title>:: Hackathon ::</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <link href='images/favicon.png' rel='shortcut icon'>
    <!-- Latest compiled and minified CSS -->
    @*<link rel="stylesheet" href="css/bootstrap.min.css">*@
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    @*<link href="css/custom.css" rel="stylesheet">*@
    <link href="~/Content/VI_script/css/custom.css" rel="stylesheet" />
    <script src="~/Content/VI_script/Scripts/recorder.js"></script>
    <script src="~/Content/VI_script/Scripts/speaker-recognition-api-demo-core.js"></script>
    <script src="~/Content/VI_script/Scripts/jquery-loader.js"></script>
    
</head>

<body>
    <div class="Logo">Free Soul's Voice Enabled Access Prototype</div>
    @RenderBody()
   
    <script src="~/Content/VI_script/js/jquery-2.1.3.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Content/VI_script/js/bootstrap.min.js"></script>
    <script src="~/Content/VI_script/js/jquery.matchHeight.js"></script>

    <script>
$(document).ready(function(){

        $("#VoiceLogin").hide();
		$("#NormalLoginBtn").hide();
        $("#NormalLogin").show();


    $('#LoginWithVoiceBtn').click(function(){
	$(this).hide();
	$("#NormalLoginBtn").show();
	$("#NormalLogin").hide();
    $("#VoiceLogin").show();
    return false;
    });


	 $('#NormalLoginBtn').click(function(){
	$(this).hide();
	$("#LoginWithVoiceBtn").show();
	$("#NormalLogin").show();
    $("#VoiceLogin").hide();
    return false;
    });


	 $('#forgotVoicePhrase').click(function(){

	$("#hint").show();

    return false;
    });
	 $('.RecordIcon').click(function(){

$(this).toggleClass('MicRecording');

    return false;
    });

});
    </script>

    <script>
$(function() {
	$('.LoginBox .column').matchHeight({
    byRow: true,
    property: 'height',
    target: null,
    remove: false
});
});
var recorder;
var audio_context;

function onMediaSuccess(stream, callback, secondsOfAudio) {
    audio_context = audio_context || new window.AudioContext;
    var input = audio_context.createMediaStreamSource(stream);
    recorder = new Recorder(input);
    recorder.record();
    console.log("in");
	setTimeout(() => { StopListening(callback); }, secondsOfAudio*1000);
}

function StopListening(callback){
	console.log('...working...');
    recorder && recorder.stop();
    recorder.exportWAV(function(blob) {
        callback(blob);
    });
    recorder.clear();
}

    </script>


</body>
</html>
